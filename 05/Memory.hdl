// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl
/** 
 * The Memory chip implements the complete address space of the Hack data memory,
 * including RAM, memory mapped screen, and memory mapped keyboard.
 * Outputs the value of the memory location specified by the address input.
 * If (load == 1), sets the memory location specified by the address input
 * to the value of the in input.
 * Address space rules:
 * Only the upper 16K + 8K + 1 words of the memory are used.
 * Access to address 0 to 16383 (0x0000 to 0x3FFF) results in accessing the RAM;
 * Access to address 16384 to 24575 (0x4000 to 0x5FFF) results in accessing the Screen memory map;
 * Access to address 24576 (0x6000) results in accessing the Keyboard memory map.
 */

/*
Can be built using RAM16K, Screen, Keyboard chips

Functionality:
- in[16] = what to write
- load = write or not
- address = where to read/write
- out[16] = value at given address

address & routing
- if most significant bit = 1 -> screen or keyboard
  otherwise RAM
- if second most significant bit = 0 -> screen
- 110000000000000 = keyboard
- addresses > keyboard are invalid
*/

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    DMux(in=load, sel=address[14], a=loadram, b=loadelse);
    RAM16K(in=in, load=loadram, address=address[0..13], out=outram);
    DMux(in=loadelse, sel=address[13], a=loadscr, b=false);
    Screen(in=in, load=loadscr, address=address[0..12], out=outscr);
    Keyboard(out=outkey);
    Mux4Way16(a=outram, b=outram, c=outscr, d=outkey, sel=address[13..14], out=out);
}
