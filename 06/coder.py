def dest(s: str) -> str:
    c = ""
    for d in ["A", "D", "M"]:
        if d in s:
            c += "1"
        else:
            c += "0"
    return c

def comp(s: str) -> str:
    c = ""
    c += "1" if "M" in s else "0" # the "a" bit
    if c == "1":
        s = s.replace("M", "A")
    f = {
        "0": "101010",
        "1": "111111",
        "-1": "111010",
        "D": "001100",
        "A": "110000",
        "!D": "001101",
        "!A": "110001",
        "-D": "001111",
        "-A": "110011",
        "D+1": "011111",
        "A+1": "110111",
        "D-1": "001110",
        "A-1": "110010",
        "D+A": "000010",
        "D-A": "010011",
        "A-D": "000111",
        "D&A": "000000",
        "D|A": "010101"
    }
    c += f[s]
    return c

def jump(s: str) -> str:
    f = {
        "": "000",
        "JGT": "001",
        "JEQ": "010",
        "JGE": "011",
        "JLT": "100",
        "JNE": "101",
        "JLE": "110",
        "JMP": "111"
    }
    return f[s]
